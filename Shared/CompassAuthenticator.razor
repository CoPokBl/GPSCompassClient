@using CompassApi
@using Newtonsoft.Json
@using System.Text
@using GeneralPurposeLib
@using GPSCompassClient.Data

@inject IJSRuntime JsRuntime
@inject NavigationManager NavigationManager


@code {

    [Parameter]
    public Action<CachedCompassClient> OnLogin { get; set; } = _ => { };

    [Parameter]
    public bool RedirectToLogin { get; set; } = true;
    
    [Parameter]
    public Action OnLoginFailed { get; set; } = () => { };
    
    protected override async void OnAfterRender(bool firstRender) {
        if (!firstRender) {
            return;
        }

        HtmlInteractor htmlInteractor = new(JsRuntime);
        Cookie cookie = new(JsRuntime);
        
        await htmlInteractor.Log("Running authenticator");
        
        string state = await cookie.GetValue("state");
        if (string.IsNullOrWhiteSpace(state)) {
            await htmlInteractor.Log("State was null or empty");
            NotLoggedIn();
            return;
        }
        try {
            state = Encoding.UTF8.GetString(Convert.FromBase64String(state.Replace('~', '=')));
        }
        catch (Exception) {
            await htmlInteractor.Log("State was invalid base64 (Ending in ~ not =)");
            NotLoggedIn();
            return;
        }

        CompassLoginState compassLoginState;
        try {
            compassLoginState = JsonConvert.DeserializeObject<CompassLoginState>(state).ThrowIfNull();
        }
        catch (Exception) {
            await htmlInteractor.Log("State was invalid object or was null");
            NotLoggedIn();
            return;
        }
        
        CachedCompassClient compassClient = new(JsRuntime, compassLoginState);
        CompassUser user;
        try {
            user = await compassClient.GetUserProfile(false);  // Don't use cache so we can actually work out it if works
            user.ThrowIfNull();
        }
        catch (Exception e) {
            await htmlInteractor.Log("State could not be used to obtain user profile: " + e.Message);
            NotLoggedIn();
            return;
        }
        
        await htmlInteractor.Log("Reported user: " + user.FullName);
        await htmlInteractor.Log("No authentication failures were detected, giving login signal to parent");
        OnLogin(compassClient);
    }

    private void NotLoggedIn() {
        OnLoginFailed();
        if (RedirectToLogin) {
            NavigationManager.NavigateTo("/login");
        }
    }
}